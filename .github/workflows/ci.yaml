---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: ci

on:
  push:
    branches: [ 'main' ]
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [ 'main' ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
env:
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Workflow Tools
        run: brew install ktlint detekt

      - name: Lint check
        run: ktlint --editorconfig .editorconfig ./src/**/*.kt build.gradle.kts

      - name: Code analysis
        run: detekt --config detekt.yaml --input ./src,build.gradle.kts --report sarif:detekt.sarif

      - name: Upload SARIF to GitHub using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: detekt.sarif

  build-docker:
    needs: ["lint"]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Packages
        if: github.event_name != 'pull_request' && github.ref_type == 'tag'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag
        id: semver_tag
        run: |
          GIT_TAG=${{ github.ref_name  }}
          echo "TAG=${GIT_TAG#*v}" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/kobot
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.semver_tag.outputs.TAG }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.semver_tag.outputs.TAG }}
