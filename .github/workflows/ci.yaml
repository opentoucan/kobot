---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: ci

on:
  push:
    branches: [ 'main' ]
    tags:
      - '*'
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
  pull_request:
    branches: [ 'main' ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Release version
        required: false
env:
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Workflow Tools
        run: brew install ktlint detekt

      - name: Install uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5.4.1
        with:
          version: "0.5.30"

      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        with:
            python-version: '3.13'

      - name: Lint check
        run: ktlint --reporter=sarif,output=ktlint.sarif --editorconfig .editorconfig ./src/**/*.kt build.gradle.kts

      - name: Code analysis
        run: detekt --config detekt.yaml --input ./src,build.gradle.kts --report sarif:detekt.sarif

      - name: Merge sarif files
        run: uvx --no-cache --no-config --from sarif-tools@latest sarif copy *.sarif --out report.sarif

      - name: Upload SARIF to GitHub using the upload-sarif action
        uses: github/codeql-action/upload-sarif@6bb031afdd8eb862ea3fc1848194185e076637e5 # v3
        if: success() || failure()
        with:
          sarif_file: report.sarif

  prepare:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      version: ${{ steps.image-version.outputs.semantic }}
      platforms: ${{ steps.bake-options.outputs.platforms }}
      valid-release: ${{ steps.image-version.outputs.valid-release }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());
            core.setOutput('repository-name', '${{ github.event.repository.name }}'.toLowerCase());

      - name: Set input version
        id: input_version
        env:
          TAG: ${{ github.ref_name }}
          INPUT_VERSION: ${{ inputs.version }}
        run: |
          echo "VERSION=${INPUT_VERSION:-$TAG}" >> $GITHUB_OUTPUT

      - name: Get semantic version
        uses: ./.github/actions/image-versions
        id: image-version
        with:
          input-version: ${{ steps.input_version.outputs.VERSION }}

      - name: Get Bake Options
        id: bake-options
        uses: ./.github/actions/bake-options

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.image-version.outputs.semantic }}

      - name: Upload Bake Metadata
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.vars.outputs.repository-name }}-bake-metadata
          path: ${{ steps.meta.outputs.bake-file }}
          if-no-files-found: error
          retention-days: 1

  build-docker:
    name: Build (${{ matrix.platform }})
    runs-on: ${{ startsWith(matrix.platform, 'linux/arm') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.platforms) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());
            core.setOutput('repository-name', '${{ github.event.repository.name }}'.toLowerCase());
            core.setOutput('target-arch', '${{ matrix.platform }}'.split('/').pop());

      - name: Login to Github Packages
        if: needs.prepare.outputs.valid-release
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Bake Metadata
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ steps.vars.outputs.repository-name }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build
        uses: docker/bake-action@4ba453fbc2db7735392b93edf935aaf9b1e8f747 # v6.5.0
        id: bake
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ runner.temp }}/docker-metadata-action-bake.json
          set: |
            *.args.VENDOR=${{ steps.vars.outputs.repository-owner }}
            *.cache-from=${{ format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max', steps.vars.outputs.repository-owner, steps.vars.outputs.repository-name, steps.vars.outputs.target-arch) }}
            *.cache-to=${{ needs.prepare.outputs.valid-release && format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max,compression=zstd,force-compression=true', steps.vars.outputs.repository-owner, steps.vars.outputs.repository-name, steps.vars.outputs.target-arch) || '' }}
            *.labels.org.opencontainers.image.title=${{ steps.vars.outputs.repository-name }}
            *.labels.org.opencontainers.image.url=https://ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name }}
            *.labels.org.opencontainers.image.version=${{ needs.prepare.outputs.version || github.sha }}
            *.labels.org.opencontainers.image.revision=${{ github.sha }}
            *.labels.org.opencontainers.image.vendor=${{ steps.vars.outputs.repository-owner }}
            ${{ needs.prepare.outputs.valid-release && format('*.output=type=image,name=ghcr.io/{0}/{1},push-by-digest=true,name-canonical=true,push=true', steps.vars.outputs.repository-owner, steps.vars.outputs.repository-name) || '*.output=type=docker' }}
            *.platform=${{ matrix.platform }}
            *.tags=
          targets: image

      - if: needs.prepare.outputs.valid-release
        name: Export Digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          DIGEST="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
          touch "${{ runner.temp }}/digests/${DIGEST#sha256:}"

      - if: needs.prepare.outputs.valid-release
        name: Upload Digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.vars.outputs.repository-name  }}-digests-${{ steps.vars.outputs.target-arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  release:
    if: needs.prepare.outputs.valid-release
    name: Release
    runs-on: ubuntu-latest
    needs: ["prepare", "build-docker"]
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());
            core.setOutput('repository-name', '${{ github.event.repository.name }}'.toLowerCase());

      - name: Download Bake Metadata
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ steps.vars.outputs.repository-name }}-bake-metadata
          path: ${{ runner.temp }}

      - name: Download Digests
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: ${{ runner.temp }}/digests
          pattern: ${{ steps.vars.outputs.repository-name }}-digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Manifest List and Push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
              $(jq --raw-output --compact-output '.target."docker-metadata-action".tags | map(select(startswith("ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name  }}")) | "-t " + .) | join(" ")' ${{ runner.temp }}/docker-metadata-action-bake.json) \
              $(printf 'ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name  }}@sha256:%s ' *)

      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name  }}:$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/docker-metadata-action-bake.json)

      - name: Export Digest
        id: digest
        run: |
          TAG=$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/docker-metadata-action-bake.json)
          DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name }}:${TAG} --format '{{ json . }}' | jq --raw-output '.manifest.digest')
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT

      - name: Generate Token
        uses: actions/create-github-app-token@21cfef2b496dd8ef5b904c159339626a10ad380e # v1
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Create Release
        shell: bash
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"
        run: |
          gh release create "${{ needs.prepare.outputs.version }}" \
              --repo="${GITHUB_REPOSITORY}" \
              --title="${{ needs.prepare.outputs.version }}" \
              --generate-notes 2>/dev/null

  attest:
    if: ${{ needs.prepare.outputs.valid-release }}
    name: Attest
    needs: release
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write
      security-events: write
    steps:
      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());
            core.setOutput('repository-name', '${{ github.event.repository.name }}'.toLowerCase());

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Upload Dependency Snapshot
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          dependency-snapshot: true
          image: ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name }}@${{ needs.release.outputs.digest }}

      - name: Attestation
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          push-to-registry: true
          subject-name: ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name }}
          subject-digest: ${{ needs.release.outputs.digest }}

      - name: Verify Attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh attestation verify --repo ${{ github.repository }} oci://ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ steps.vars.outputs.repository-name }}@${{ needs.release.outputs.digest }}
